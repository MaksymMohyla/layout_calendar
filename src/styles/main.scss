$cell-size: 100px;
$gap: 1px;
$calendar-width: calc(
  (#{$cell-size} * 7) + (#{$gap} * 6)
); // width of the calendar always remains 7 columns of days even if you want to change some input values
$days: (
  mon: 0,
  tue: 1,
  wed: 2,
  thu: 3,
  fri: 4,
  sat: 5,
  sun: 6,
);

.calendar {
  width: $calendar-width;
  min-width: $calendar-width;
  padding: 10px;
  display: flex;
  flex-wrap: wrap;
  gap: $gap;

  &__day {
    display: flex; // at first I tried to center number inside a cell by using text-aling and lineheight, it worked correctly in browser but npm test threw errors
    justify-content: center;
    align-items: center;
    box-sizing: border-box;
    background-color: #eee;
    border: 1px solid #000;
    height: $cell-size;
    width: $cell-size;
    transition: transform, 500ms;

    &:hover {
      cursor: pointer;
      background-color: #ffbfcb;
      transform: translate(0, -20px);
    }
  }

  @for $i from 1 through 31 {
    .calendar__day:nth-child(n + #{$i})::before {
      content: '#{$i}';
    }
  } // added number(day) to each cell

  @each $key, $val in $days {
    &--start-day-#{$key} .calendar__day:first-child {
      margin-left: ($cell-size + 1) * $val;
    }
  } // depending on which day the month starts, it is in the correct column

  @for $j from 28 through 31 {
    &.calendar--month-length-#{$j} .calendar__day:nth-child(n + #{$j + 1}) {
      display: none;
    }
  } // if month's length is less than 31 days, redudant days now dissapear
}
